{"version":3,"sources":["components/layout/Footer.js","player/PlayerContext.js","types/types.js","components/app/ListPlayer.js","components/app/AddPlayer.js","views/ScreenMain.js","data/truth.js","data/dare.js","components/app/QuestionsPlayer.js","views/ScreenPlayer.js","routers/AppRouter.js","player/playerReducer.js","App.js","index.js"],"names":["Footer","className","icon","faCopyright","PlayerContext","createContext","types","ListPlayer","useContext","player","dispatch","deletePlayer","e","type","payload","currentTarget","id","length","ListGroup","variant","map","i","Item","option","onClick","faTrash","AddPlayer","useState","namePlayer","setNamePlayer","Form","Group","as","Row","controlId","Col","sm","md","Control","placeholder","value","onChange","target","Button","uuidv4","faUserPlus","ScreenMain","to","faPlayCircle","truth","question","dare","QuestionsPlayer","show","setShow","cargando","setCargando","pregunta","setPregunta","numberQuestion","setNumberQuestion","handleQuestion","setTimeout","Math","floor","random","Modal","centered","Header","Title","Body","Spinner","animation","ScreenPlayer","rondaPlayer","mustSpin","setMustSpin","prizeNumber","setPrizeNumber","mustStartSpinning","data","outerBorderColor","outerBorderWidth","innerBorderColor","radiusLineColor","radiusLineWidth","textColors","fontSize","backgroundColors","onStopSpinning","newPrizeNumber","AppRouter","src","alt","exact","path","component","playerReducer","state","action","filter","p","init","JSON","parse","localStorage","getItem","App","useReducer","useEffect","setItem","stringify","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7fde3b80.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCopyright } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"app__footer d-flex justify-content-center align-items-center\">\r\n            <span className=\"text-white\"><FontAwesomeIcon icon={faCopyright} /> Vision Company 2021</span>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import { createContext } from 'react';\r\n\r\nexport const PlayerContext = createContext();\r\n\r\n","\r\n\r\nexport const types = {\r\n    addPlayer: '[player] addPlayer',\r\n    deletePlayer: '[player] deletePlayer'\r\n}","import React, { useContext } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash} from '@fortawesome/free-solid-svg-icons';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { PlayerContext } from '../../player/PlayerContext';\r\nimport { types } from '../../types/types';\r\n\r\nconst ListPlayer = () => {\r\n\r\n    const {player, dispatch} = useContext(PlayerContext);\r\n\r\n    const deletePlayer = (e) => {\r\n        dispatch({\r\n            type: types.deletePlayer,\r\n            payload: e.currentTarget.id\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                player.length < 1 ?\r\n                (\r\n                    <h3 className=\"text-center mt-3\">\r\n                        Para poder iniciar el juego debe añadir 2 jugadores o más\r\n                    </h3>\r\n                ) :\r\n                (\r\n                    <>\r\n                        {\r\n                            player.length <= 1 ?\r\n                            (\r\n                                <h3 className=\"text-center mt-3\">\r\n                                    Para poder iniciar el juego debe añadir 2 jugadores o más\r\n                                </h3>\r\n                            ) : null\r\n                        }\r\n                        <ListGroup variant=\"flush\">\r\n                            {\r\n                                player.map( (player, i) => {\r\n                                    return (<ListGroup.Item key={player.id} className=\"d-flex justify-content-between align-items-center\">\r\n                                                <span>{`${i + 1}. ${player.option}`}</span>\r\n\r\n                                                <div className=\"main__opciones-player d-flex justify-content-between\">\r\n                                                    {/* <FontAwesomeIcon icon={faPencilAlt}/> */}\r\n                                                    <span className=\"pointer\" id={player.id} onClick={deletePlayer}><FontAwesomeIcon icon={faTrash} /></span>\r\n                                                </div>\r\n                                            </ListGroup.Item>)\r\n                                })\r\n                            }\r\n                        </ListGroup>\r\n                    </>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListPlayer;\r\n","import React, { useContext, useState } from 'react';\r\nimport { Col, Form, Row, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport ListPlayer from './ListPlayer';\r\nimport { PlayerContext } from '../../player/PlayerContext';\r\nimport { types } from '../../types/types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst AddPlayer = () => {\r\n\r\n    const {dispatch} = useContext(PlayerContext)\r\n\r\n\r\n    const [namePlayer, setNamePlayer] = useState(\"\");\r\n\r\n    const handleInputChange = (e) => {\r\n        setNamePlayer(\r\n            e.target.value\r\n        );\r\n    }\r\n\r\n    const addNewPlayer = () => {\r\n        dispatch({\r\n            type: types.addPlayer,\r\n            payload: {\r\n                id: uuidv4(),\r\n                option: namePlayer\r\n            }\r\n        });\r\n        setNamePlayer(\"\");\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n            <Form>\r\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\">\r\n                    <Col sm=\"12\" md=\"8\" className=\"\">\r\n                        <Form.Control type=\"text\" placeholder=\"Player name\" value={namePlayer} onChange={handleInputChange}/>\r\n                    </Col>\r\n                    <Col sm=\"12\" md=\"4\" className=\"p-0 d-flex justify-content-center\">\r\n                        <Button variant=\"primary\" className=\"\" type=\"button\" onClick={addNewPlayer}>\r\n                            Add <FontAwesomeIcon icon={faUserPlus} />\r\n                        </Button>\r\n                    </Col>\r\n                </Form.Group>\r\n            </Form>\r\n\r\n            <div className=\"main__content-list-player container\">\r\n                <ListPlayer/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddPlayer;\r\n","import React, { useContext } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlayCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport AddPlayer from '../components/app/AddPlayer';\r\nimport { PlayerContext } from '../player/PlayerContext';\r\n\r\nconst ScreenMain = () => {\r\n\r\n    const {player} = useContext(PlayerContext);\r\n\r\n    return (\r\n        <div className=\"main__content text-white d-flex flex-column justify-content-around align-items-center mt-5\">\r\n            <div className=\"main__title\">\r\n                <span>\r\n                    Game Truth or Dare\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"main__form-player\">\r\n                <AddPlayer/>\r\n            </div>\r\n\r\n            {\r\n                player.length >= 2 ?\r\n                (\r\n                    <Link to=\"/player\" className=\"btn btn-primary\">\r\n                        Play <FontAwesomeIcon icon={faPlayCircle} />\r\n                    </Link>\r\n                ) : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScreenMain;\r\n","\r\nexport const truth = [\r\n    {\r\n        id: 1,\r\n        question: \"¿Cuál es tu peor hábito?\"\r\n    },\r\n    {\r\n        id: 2,\r\n        question: \"DI ALGO QUE DESEES NUNCA HABER DICHO O HECHO\"\r\n    },\r\n    {\r\n        id: 3,\r\n        question: \"DI ALGO MALO QUE HAYAS DICHO DE UNA PERSONA PRESENTE\"\r\n    },\r\n    {\r\n        id: 4,\r\n        question: \"DI TU ARREPENTIMIENTO MÁS GRANDE\"\r\n    },\r\n    {\r\n        id: 5,\r\n        question: \"DI LA ÚLTIMA VEZ QUE TUVISTE RELACIONES SEXUALES\"\r\n    },\r\n    {\r\n        id: 6,\r\n        question: \"¿LE HAS SIDO INFIEL A TU ACTUAL PAREJA?\"\r\n    },\r\n    {\r\n        id: 7,\r\n        question: \"¿EN QUÉ HAS GASTADO DINERO ÚLTIMAMENTE?\"\r\n    },\r\n    {\r\n        id: 8,\r\n        question: \"DI 2 VERDADES Y UNA MENTIRA\"\r\n    },\r\n    {\r\n        id: 9,\r\n        question: \"¿CUÁL HA SIDO EL MEJOR CONSEJO QUE TE HAN DADO Y QUIÉN?\"\r\n    },\r\n    {\r\n        id: 10,\r\n        question: \"¿CUÁNDO FUE LA ÚLTIMA MENTIRA QUE DIJISTE Y CUÁL?\"\r\n    },\r\n    {\r\n        id: 11,\r\n        question: \"¿QUÉ HACES CUANDO ESTÁS SOL@?\"\r\n    },\r\n    {\r\n        id: 12,\r\n        question: \"¿CON CUÁL DE TUS EX'S VOLVERÍAS Y POR QUÉ?\"\r\n    },\r\n    {\r\n        id: 13,\r\n        question: \"¿A CUÁL AMIGO SACARÍAS DEL CORO Y POR QUÉ?\"\r\n    },\r\n    {\r\n        id: 14,\r\n        question: \"¿CUÁL HA SIDO EL ÚLTIMO RUMOR QUE HAN DICHO DE TI?\"\r\n    },\r\n    {\r\n        id: 15,\r\n        question: \"SI PUDIERAS CAMBIAR DE VIDA CON ALGUIEN AQUÍ, ¿QUIÉN SERÍA?\"\r\n    },\r\n    {\r\n        id: 16,\r\n        question: \"SI TUVIERAS QUE ELEGIR A DOS PERSONAS DE AQUÍ (TOMANDO EN CUENTA QUE NO VOLVERÁS A VER A LAS DEMÁS), ¿QUIÉNES SERÍAN?\"\r\n    },\r\n    {\r\n        id: 17,\r\n        question: \"¿CUÁL HA SIDO EL REGALO MÁS BARATO QUE HAS COMPRADO?\"\r\n    },\r\n    {\r\n        id: 18,\r\n        question: \"¿HAS SENTIDO ATRACCIÓN POR EL MISMO SEXO?\"\r\n    },\r\n    {\r\n        id: 19,\r\n        question: \"DI UN DATO QUE TE avergüence DECIR DE TI\"\r\n    },\r\n    {\r\n        id: 20,\r\n        question: \"¿A QUIÉN ODIARÍAS VER DESNUDO?\"\r\n    },\r\n    {\r\n        id: 21,\r\n        question: \"¿CUÁL HA SIDO EL MENSAJE MÁS SUCIO QUE HAS RECIBIDO?\"\r\n    },\r\n    {\r\n        id: 22,\r\n        question: \"¿CUÁL HA SIDO EL MEJOR DÍA DE TU VIDA?\"\r\n    },\r\n    {\r\n        id: 23,\r\n        question: \"¿A QUIÉN PONDRÍAS COMO CONTACTO DE EMERGENCIA DE LOS JUGADORES?\"\r\n    },\r\n    {\r\n        id: 24,\r\n        question: \"¿TIENES MIEDO A CRECER?\"\r\n    },\r\n    {\r\n        id: 25,\r\n        question: \"¿CUÁNDO FUE LA ÚLTIMA VEZ QUE LLORASTE?\"\r\n    },\r\n    {\r\n        id: 26,\r\n        question: \"¿CUÁL ES TU POSESIÓN MÁS PRECIADA?\"\r\n    },\r\n    {\r\n        id: 27,\r\n        question: \"¿HAS SABOTEADO INTENCIONALMENTE A UN COMPAÑERO DE TRABAJO?\"\r\n    },\r\n    {\r\n        id: 28,\r\n        question: \"¿CUÁL ES LA PEOR EXPERIENCIA ÍNTIMA QUE HAS TENIDO?\"\r\n    },\r\n    {\r\n        id: 29,\r\n        question: \"¿QUÉ ODIAS Y QUE LOS DEMÁS YA SABEN DE TI?\"\r\n    },\r\n    {\r\n        id: 30,\r\n        question: \"¿CUÁL ES EL SUEÑO MÁS RARO QUE HAYAS TENIDO?\"\r\n    }\r\n];","\r\nexport   const dare = [\r\n    {\r\n        id: 1,\r\n        question: \"DEBES ENSEÑAR GALERÍA POR 1 MINUTO (60 SEGUNDOS)\"\r\n    },\r\n    {\r\n        id: 2,\r\n        question: \"DEBES DE MANDAR UN MENSAJE A UNO DE TUS EX'S CON EL QUE TENGAS CONTACTO\"\r\n    },\r\n    {\r\n        id: 3,\r\n        question: \"DEBES DE LLAMAR A TU EX (DIRECTO, INSTAGRAM O WHATSAPP)\"\r\n    },\r\n    {\r\n        id: 4,\r\n        question: \"VER EL CHAT CON TU EX O CON TU PAREJA ACTUAL POR 1 MINUTO (ESPECÍFICAMENTE, MULTIMEDIA)\"\r\n    },\r\n    {\r\n        id: 5,\r\n        question: \"VER EL CHAT CON TU EX O CON TU PAREJA ACTUAL POR 1 MINUTO (ESPECÍFICAMENTE, MULTIMEDIA)\"\r\n    },\r\n    {\r\n        id: 6,\r\n        question: \"DEBES DEJAR QUE EL GRUPO VEA EL ÁLBUM OCULTO DE TU GALERÍA\"\r\n    },\r\n    {\r\n        id: 7,\r\n        question: \"SUBIR UNA FOTO AL ESTADO (WS O IG) SELECCIONADA POR EL GRUPO\"\r\n    },\r\n    {\r\n        id: 8,\r\n        question: \"CAMBIAR FOTO DE PERFIL A SELECCIÓN DE LOS DEMÁS JUGADORES\"\r\n    },\r\n    {\r\n        id: 9,\r\n        question: \"DEBES DE MOSTRAR LOS DM DE INSTAGRAM\"\r\n    },\r\n    {\r\n        id: 10,\r\n        question: \"PON 10 COSAS LIQUIDAS EN UN VASO Y TOMA\"\r\n    },\r\n    {\r\n        id: 11,\r\n        question: \"DALE ME GUSTA A LOS PRIMEROS 15 POSTS EN INSTAGRAM\"\r\n    },\r\n    {\r\n        id: 12,\r\n        question: \"DEBES DE COMER UNA BANANA LO MÁS SEXY QUE PUEDAS\"\r\n    },\r\n    {\r\n        id: 13,\r\n        question: \"DEBES OLER LAS AXILAS DE UNO DE LOS JUGADORES\"\r\n    },\r\n    {\r\n        id: 14,\r\n        question: \"DEBES OLER LOS PIES DE UNO DE LOS JUGADORES\"\r\n    },\r\n    {\r\n        id: 15,\r\n        question: \"DEBES COLOCARTE TU ROPA AL REVÉS\"\r\n    },\r\n    {\r\n        id: 16,\r\n        question: \"DEBES DARLE UN INSULTO PERSONALIZADO A TODOS LOS JUGADORES\"\r\n    },\r\n    {\r\n        id: 17,\r\n        question: \"DEBES IMITAR COMO TIENES UN ORGASMO\"\r\n    },\r\n    {\r\n        id: 18,\r\n        question: \"DEBES HACER UN STRIPPER PARA TODO LOS JUGADORES\"\r\n    },\r\n    {\r\n        id: 19,\r\n        question: \"DEBES DECIR UNA COSA HONESTA SOBRE LOS JUGADORES \"\r\n    },\r\n    {\r\n        id: 20,\r\n        question: \"DESLIZAR EN TU LISTA DE CONTACTOS Y DONDE CAIGA EL DEDO DEBES: LLAMAR, MENSAJEAR O ELIMINAR\"\r\n    },\r\n    {\r\n        id: 21,\r\n        question: \"MOSTRAS ÁLBUM DE LOS ELIMINADOS RECIENTEMENTE\"\r\n    },\r\n    {\r\n        id: 22,\r\n        question: \"LLAMAR A UN AMIG@ Y FINGIR QUE ES SU CUMPLEAÑOS, Y CANTARLE HAPPY BIRTHDAY TO YOU\"\r\n    },\r\n    {\r\n        id: 23,\r\n        question: \"DEBES SER EL CANTANTE DE UNA LA BANDA, SELECCIONA LOS JUGADORES QUE TE ACOMPAÑARÁN\"\r\n    },\r\n    {\r\n        id: 24,\r\n        question: \"HABLANOS DE TU PRIMER BESO\"\r\n    },\r\n    {\r\n        id: 25,\r\n        question: \"DILE UN SECRETO A LA PERSONA DE TU IZQUIERDA\"\r\n    },\r\n    {\r\n        id: 26,\r\n        question: \"PUBLICA LA ÚLTIMA FOTO DE TU GALERÍA\"\r\n    },\r\n    {\r\n        id: 27,\r\n        question: \"RESPONDE LAS PRIMERAS 5 HISTORIAS DE INSTAGRAM\"\r\n    },\r\n    {\r\n        id: 28,\r\n        question: \"DEJA QUE LOS DEMÁS JUGADORES TE DEN ALGO DE COMER (DEBES TENER LOS OJOS VENDADOS)\"\r\n    },\r\n    {\r\n        id: 29,\r\n        question: \"TE RETO A DECIR ALGO QUE TE HAGA FELIZ Y  QUE TU PADRES NO SE PUEDEN ENTERAR\"\r\n    },\r\n    {\r\n        id: 30,\r\n        question: \"DEJA QUE LOS DEMÁS JUGADORES DIBUJEN ALGO EN TU PIEL Y PUBLÍCALA\"\r\n    },\r\n    {\r\n        id: 31,\r\n        question: \"BEBE UNA LATA COMPLETA DE CERVEZA SIN PARAR\"\r\n    }\r\n];","import React, {useState} from 'react';\r\nimport { Modal, Spinner } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { truth } from '../../data/truth';\r\nimport { dare } from '../../data/dare';\r\n\r\nconst QuestionsPlayer = ({show, setShow, player}) => {\r\n\r\n    const [cargando, setCargando] = useState(false);\r\n    const [pregunta, setPregunta] = useState(\"\");\r\n    const [numberQuestion, setNumberQuestion] = useState(0);\r\n\r\n    const handleQuestion = (question) => {\r\n        setCargando(true);\r\n        \r\n        setTimeout(() => {\r\n            setCargando(false);\r\n            setPregunta(question);\r\n\r\n            if (pregunta === \"truth\") {\r\n                setNumberQuestion(\r\n                    Math.floor( (Math.floor( Math.random() * truth.length)) - 1)\r\n                );\r\n\r\n            } else {\r\n                setNumberQuestion(\r\n                    Math.floor( (Math.floor( Math.random() * dare.length)) - 1)\r\n                );\r\n            }\r\n        }, 2000);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal className=\"\" show={show} centered >\r\n                <Modal.Header className=\"d-flex justify-content-center\">\r\n                    <Modal.Title>¿Choose {player} truth or dare?</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"d-flex justify-content-center align-items-center\">\r\n                        {\r\n                            !cargando ?\r\n                            (\r\n                               <>\r\n                                    {\r\n                                        pregunta === \"\" ?\r\n                                            (\r\n                                                <div className=\"animate__animated animate__zoomIn\">\r\n                                                    <Button variant=\"primary\" className=\"me-2\" onClick={ () => handleQuestion(\"truth\")}>\r\n                                                        Truth\r\n                                                    </Button>\r\n\r\n                                                    <Button variant=\"primary\" className=\"me-2\" onClick={ () => handleQuestion(\"dare\")}>\r\n                                                        Dare\r\n                                                    </Button>\r\n                                                </div>\r\n                                            ) : \r\n                                            (\r\n                                                <div className=\"d-flex flex-column align-items-center animate__animated animate__zoomIn\">\r\n                                                    {\r\n                                                        pregunta === \"truth\" ?\r\n                                                        (\r\n                                                            <span className=\"player__pregunta animate__animated animate__zoomIn\">{truth[numberQuestion].question}</span>\r\n                                                        ) :\r\n                                                        (\r\n                                                            <span className=\"player__pregunta animate__animated animate__zoomIn\">{dare[numberQuestion].question}</span>\r\n                                                        )\r\n                                                    }\r\n\r\n                                                    <Button variant=\"primary\" className=\"me-2 mt-3 animate__animated animate__zoomIn\" onClick={() => {setShow(false); setPregunta(\"\");}}>\r\n                                                        Done\r\n                                                    </Button>\r\n                                                </div>\r\n                                            )\r\n                                    }\r\n                               </>\r\n                            ) : \r\n                            (\r\n                                <div className=\"animate__animated animate__zoomIn\">\r\n                                    <Spinner animation=\"border\" variant=\"light\" />\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuestionsPlayer;\r\n","import React, { useContext, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Wheel } from 'react-custom-roulette';\r\nimport QuestionsPlayer from '../components/app/QuestionsPlayer';\r\nimport { PlayerContext } from '../player/PlayerContext';\r\n\r\nconst ScreenPlayer = () => {\r\n\r\n    const {player} = useContext(PlayerContext);\r\n\r\n    const rondaPlayer = [...player];\r\n\r\n    const [mustSpin, setMustSpin] = useState(false);\r\n    const [prizeNumber, setPrizeNumber] = useState(0);\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    function handleShow() {\r\n        setShow(true);\r\n    }\r\n\r\n    const handleSpinClick = () => {\r\n        const newPrizeNumber = Math.floor(Math.random() * rondaPlayer.length);\r\n        setPrizeNumber(newPrizeNumber);\r\n        setMustSpin(true);\r\n    };\r\n\r\n    return (\r\n        <div className=\"player__content text-white d-flex flex-column justify-content-around align-items-center animate__animated animate__zoomIn\">\r\n\r\n            <div className=\"player__title mt-3\">\r\n                <span>Players</span>\r\n            </div>\r\n           \r\n                <Wheel\r\n                        mustStartSpinning={mustSpin}\r\n                        prizeNumber={prizeNumber}\r\n                        data={rondaPlayer}\r\n                        outerBorderColor={[\"#f2f2f2\"]}\r\n                        outerBorderWidth={[10]}\r\n                        innerBorderColor={[\"#f2f2f2\"]}\r\n                        radiusLineColor={[\"#dedede\"]}\r\n                        radiusLineWidth={[10]}\r\n                        textColors={[\"#ffffff\"]}\r\n                        fontSize={[25]}\r\n                        backgroundColors={[\r\n                            \"#7829E7\",\r\n                            \"#2A129A\"\r\n                        ]}\r\n                        onStopSpinning={() => {\r\n                            setMustSpin(false);\r\n                            handleShow();\r\n                        }}\r\n                />\r\n\r\n            <Button variant=\"primary\" className=\"\" type=\"button\" onClick={handleSpinClick}>\r\n                GO!\r\n            </Button>\r\n\r\n            <QuestionsPlayer \r\n                show={show}\r\n                setShow={setShow}\r\n                player={rondaPlayer[prizeNumber].option}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScreenPlayer;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport Footer from '../components/layout/Footer';\r\nimport ScreenMain from '../views/ScreenMain';\r\nimport ScreenPlayer from '../views/ScreenPlayer';\r\n\r\nconst AppRouter = () => {\r\n    return (\r\n        <>\r\n            <div className=\"app__content d-flex justify-content-between\">\r\n                <div className=\"app__content-img d-none d-md-flex align-items-center animate__animated animate__fadeInDown\">\r\n                    <img src=\"./assets/truth-logo.jpeg\" className=\"\" alt=\"logo truth\" />\r\n                </div>\r\n\r\n                <div className=\"app__main animate__animated animate__zoomIn\">\r\n                    <Router>\r\n                        <Switch>\r\n                        <Route exact path=\"/player\" component={ScreenPlayer} />\r\n                            <Route exact path=\"/\" component={ScreenMain} />\r\n                        </Switch>\r\n                    </Router>\r\n                </div>\r\n\r\n                <div className=\"app__content-img d-none d-md-flex align-items-center animate__animated animate__fadeInUp\">\r\n                    <img src=\"./assets/dare-logo.jpeg\" className=\"\" alt=\"logo dare\" />\r\n                </div>\r\n            </div>\r\n\r\n            <Footer/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AppRouter;\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const playerReducer = (state, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.addPlayer:\r\n            return [...state, action.payload];\r\n\r\n        case types.deletePlayer:\r\n            return state.filter( p => p.id !== action.payload);\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useEffect, useReducer } from 'react';\nimport AppRouter from './routers/AppRouter';\nimport { PlayerContext } from './player/PlayerContext';\nimport { playerReducer } from './player/playerReducer';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap';\nimport 'animate.css';\nimport './styles/styles.scss';\n\n\nconst init = () => {\n  return JSON.parse(localStorage.getItem('player')) || [];\n}\n\nconst App = () => {\n\n  const [player, dispatch] = useReducer(playerReducer, [], init);\n\n  useEffect(() => {\n    localStorage.setItem( 'player', JSON.stringify(player) );\n  }, [player])\n\n\n  return (\n    <PlayerContext.Provider value={{\n      player,\n      dispatch\n    }}>\n      <AppRouter/>\n    </PlayerContext.Provider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}